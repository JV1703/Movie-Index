plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

android {
    namespace 'com.example.movieindex'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.movieindex"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

kapt {
    correctErrorTypes = true
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // motion layout
    implementation("androidx.constraintlayout:constraintlayout:2.2.0-alpha05")

    // lifecycle
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
//    kapt("androidx.lifecycle:lifecycle-compiler:$lifecycle_version")
    kapt("androidx.lifecycle:lifecycle-common-java8:$lifecycle_version")

    // navigation
    api "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    api "androidx.navigation:navigation-ui-ktx:$navigation_version"
    api("androidx.navigation:navigation-dynamic-features-fragment:$navigation_version")

    // view pager 2
    implementation("androidx.viewpager2:viewpager2:1.0.0")

    // dagger-hilt
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-compiler:$dagger_hilt_version"
    kapt("androidx.hilt:hilt-compiler:1.0.0")
    implementation("androidx.hilt:hilt-work:1.0.0")
    kapt("androidx.hilt:hilt-compiler:1.0.0")

    // coroutine
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines_version")

    // shimmer
    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    // lottie
    implementation "com.airbnb.android:lottie:$lottie_version"

    // progress button
    implementation 'com.github.razir.progressbutton:progressbutton:2.1.0'

    // biometric
    implementation("androidx.biometric:biometric:1.1.0")

    // ROOM
    implementation("androidx.room:room-runtime:$room_version")
    kapt("androidx.room:room-compiler:$room_version")
    implementation("androidx.room:room-ktx:$room_version")
    implementation("androidx.room:room-paging:$room_version")
    testImplementation("androidx.room:room-testing:$room_version")
//    implementation 'androidx.work:work-runtime:2.7.1'

    // DataStore - preference
    implementation("androidx.datastore:datastore-preferences:1.0.0")

    // retrofit
    implementation("com.squareup.retrofit2:retrofit:$retrofit_version")
    implementation("com.squareup.retrofit2:converter-gson:$retrofit_version")

    // OkHttp
    implementation("com.squareup.okhttp3:okhttp:5.0.0-alpha.6")
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.6'

    // Moshi
    implementation 'com.squareup.moshi:moshi-kotlin:1.13.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'

    // Timber
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // paging
    implementation("androidx.paging:paging-runtime:$paging_version")

    // Palette
    implementation('androidx.palette:palette:1.0.0')

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.14.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.14.2'

    // Text Drawable
    implementation 'com.github.ramseth001:TextDrawable:1.1.6'

    // Youtube Player
    implementation 'com.pierfrancescosoffritti.androidyoutubeplayer:core:11.1.0'

    // Work Manager
    implementation "androidx.work:work-runtime-ktx:$work_version"
    androidTestImplementation("androidx.work:work-testing:$work_version")
    testImplementation("androidx.work:work-testing:$work_version")

    // hilt testing
    androidTestImplementation("com.google.dagger:hilt-android-testing:$dagger_hilt_version")
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:$dagger_hilt_version")
    debugImplementation("androidx.fragment:fragment-testing:1.5.5")

    // desugar
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:$desugar_version")

    // Leak Canary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'

    // Test

    // RoboElectric
    testImplementation "org.robolectric:robolectric:4.9"

    // Coroutine Test Dispatcher
    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version")
    androidTestImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version")

    // Instant Task Executor Rule
    testImplementation "androidx.arch.core:core-testing:$coreTesting"
    androidTestImplementation "androidx.arch.core:core-testing:$coreTesting"
}